#ifndef Theory_h
#define Theory_h
#endif /* Theory_h */






/*
    第一章：导论
 
 1、数据元素之间的逻辑关系 就是 数据的逻辑结构
 
 数据结构：数据逻辑结构+数据存储结构+数据的运算
 
 2、数据的存储结构有四种：（1）顺序存储结构[存储在连续存储单元]、（2）链式存储结构[指针]、（3）索引存储结构[建立索引表（关键字和地址）]、（4）散列存储结构[根据元素直接计算出地址]
 
 3、算法5个准则：（1）输入、（2）输出、（3）有穷计算、（4）输出确定性、（5）可行性
 
 4、算法的频度之和为 算法内每条语句执行的次数相加
 
 5、基本时间复杂度排序：O(1)、O(log2(n))、O(n)、O(nlog2(n))、O(n平方)、O(n立方)、O(n的k次方)、O(2的n次方)、O(n!)
 
 6、沃思提出 算法+数据结构=程序
 
 */

 
/*
    第二章：线性表
 
 1、线性表是线性结构，表中元素之间的逻辑关系就是线性关系
 
 2、线性表 按照逻辑次序存储一组连续的存储单元中就是 顺序表
    顺序表的查询、插入、删除操作都是O(n)时间复杂度
 
 3、链表的节点是不可以随机存取的 链表可以用在线性结构也可以用在非线形结构
 
 4、单链表：头指针head + n个(数据域+单个指针域)，若空表则head为null
 
 5、单链表的插入必须从表头开始查起（所以链表是非随机存储结构）
 
 6、单链表的查询、插入、删除操作都是O(n)时间复杂度
 
 7、单循环链表 (head + (data, next))
 
 8、双循环链表 (head + (prior, data, next))
 
 9、线性表有两种存储方式：顺序表和链表
    顺序表：可以随机访问，但是需要移动大量元素
    链表：插入和删除不需要移动元素，但是不能随机访问
    结论：需要经常查询或者数据量固定的就用 顺序表
         需要经常修改或者对数据量变化较大的就用 链表
         另外存储密度(data/data+指针所占空间)顺序表为1 链表小于1
 */


/*
    第三章：栈和队列
 
 1、栈是后进先出（Last In first Out）简称LIFO 的线性表
    
 */
